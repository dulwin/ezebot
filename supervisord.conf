
[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)

[supervisord]
logfile=/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[program:kafka]
command=./start_kafka.sh                 ; the program (relative uses PATH, can take args)
process_name=%(program_name)s           ; process_name expr (default %(program_name)s)
numprocs=1                              ; number of processes copies to start (def 1)
autostart=true                          ; start at supervisord start (default: true)
autorestart=unexpected                  ; whether/when to restart (default: unexpected)
startsecs=1                             ; number of secs prog must stay running (def. 1)
startretries=3                          ; max # of serial start failures (default 3)
exitcodes=0,2                           ; 'expected' exit codes for process (default 0,2)
stopsignal=QUIT                         ; signal used to kill process (default TERM)
stopwaitsecs=10                         ; max num secs to wait b4 SIGKILL (default 10)
stopasgroup=false                       ; send stop signal to the UNIX process group (default false)
killasgroup=false                       ; SIGKILL the UNIX process group (def false)
user=dulwin                             ; setuid to this UNIX account to run the program
redirect_stderr=true                    ; redirect proc stderr to stdout (default false)
stdout_logfile=logs/kafka.log         ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=1MB             ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10               ; # of stdout logfile backups (default 10)
stdout_capture_maxbytes=1MB             ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false             ; emit events on stdout writes (default false)
stderr_logfile=logs/kafka_err.log     ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=1MB             ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10               ; # of stderr logfile backups (default 10)
stderr_capture_maxbytes=1MB             ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false             ; emit events on stderr writes (default false)
environment=A="1",B="2"                 ; process environment additions (def no adds)
serverurl=AUTO                          ; override serverurl computation (childutils)

[program:bot]
command=./start_bot.sh                ; the program (relative uses PATH, can take args)
process_name=%(program_name)s           ; process_name expr (default %(program_name)s)
numprocs=1                              ; number of processes copies to start (def 1)
autostart=true                          ; start at supervisord start (default: true)
autorestart=unexpected                  ; whether/when to restart (default: unexpected)
startsecs=1                             ; number of secs prog must stay running (def. 1)
startretries=3                          ; max # of serial start failures (default 3)
exitcodes=0,2                           ; 'expected' exit codes for process (default 0,2)
stopsignal=QUIT                         ; signal used to kill process (default TERM)
stopwaitsecs=10                         ; max num secs to wait b4 SIGKILL (default 10)
stopasgroup=false                       ; send stop signal to the UNIX process group (default false)
killasgroup=false                       ; SIGKILL the UNIX process group (def false)
user=dulwin                             ; setuid to this UNIX account to run the program
redirect_stderr=true                    ; redirect proc stderr to stdout (default false)
stdout_logfile=logs/bot.log         ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=1MB             ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10               ; # of stdout logfile backups (default 10)
stdout_capture_maxbytes=1MB             ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false             ; emit events on stdout writes (default false)
stderr_logfile=logs/bot_error.log     ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=1MB             ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10               ; # of stderr logfile backups (default 10)
stderr_capture_maxbytes=1MB             ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false             ; emit events on stderr writes (default false)
environment=A="1",B="2"                 ; process environment additions (def no adds)
serverurl=AUTO                          ; override serverurl computation (childutils)

[group:jarvis]
programs=kafka,bot

